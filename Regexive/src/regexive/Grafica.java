/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package regexive;
import analizadores.Lexico;
import analizadores.Sintactico;
import analizadores.sym;


import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author dark
 */
public class Grafica extends javax.swing.JFrame {
    //variable para el nombre de las carpetas
     public static String  nombre_carpeta;
     public static ArrayList<Errores> listaErrores = new ArrayList<Errores>();
     public static ArrayList<Errores> listaErroresSintacticos = new ArrayList<Errores>();
    // public static Read_Files read_file = new Read_Files();
    
    /**
     * Creates new form Grafica
     */
    public Grafica() {
       
        nombre_carpeta ="";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEntrdada = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        btnAnalizar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        btnAbrirArchivo = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(75, 10));
        setSize(new java.awt.Dimension(500, 500));

        jLabel1.setText("Archivo de Entrada");

        txtEntrdada.setColumns(20);
        txtEntrdada.setRows(5);
        jScrollPane1.setViewportView(txtEntrdada);

        jLabel2.setText("Salida");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        jButton2.setText("Siguiente");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 158, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton3.setText("Generar Automata");

        btnAnalizar.setText("Analizar Entrada");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        jButton1.setText("Anterior");

        jMenu1.setText("Archivo");

        jMenuItem1.setText("Nuevo Archivo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        btnAbrirArchivo.setText("Abrir Archivo");
        btnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirArchivoActionPerformed(evt);
            }
        });
        jMenu1.add(btnAbrirArchivo);

        jMenuItem3.setText("Guardar");
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Guardar Como");
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Arboles");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Tabla Siguientes");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Tabla Transiciones");
        jMenuBar1.add(jMenu4);
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAnalizar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))
                        .addGap(144, 144, 144)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(276, 276, 276))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(btnAnalizar)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        // TODO add your handling code here: 
        this.crearCarpetas();
        Sintactico pars;
        try {
            
            pars=new Sintactico(new Lexico(new BufferedReader( new StringReader(txtEntrdada.getText()))));
            pars.parse();     
            //AST_arbolSintaxisAbstracta=pars.getAST();
            //*************           
            //for(int i =0; i<listaErrores.size();i++){
              //   System.out.println("i: "+i+" Tipo: "+listaErrores.get(i).tipoError+" valorError:"+listaErrores.get(i).valorError+" fila:"+listaErrores.get(i).fila+" Columna:"+listaErrores.get(i).columna);
            //}
             ReporteErrores();
             ReporteErroresSintactico();
            
        } catch (Exception ex) {
            System.out.println("Error fatal en compilación de entrada: "+ex);
        } 
        //ejecutarAST(AST_arbolSintaxisAbstracta);
        
    }//GEN-LAST:event_btnAnalizarActionPerformed

    public void ReporteErrores(){
        FileWriter fichero = null;
                PrintWriter pw = null;
                try {
                    fichero = new FileWriter("//home//dark//A_Entradas_Proyecto2//Compi_Proyecto1//Reporte_ErroresL.html");
                    pw = new PrintWriter(fichero);
                    //comenzamos a escribir el html
                    pw.println("<html>");
                    pw.println("<head><title>REPORTE DE ERRORES LEXICOS</title></head>");
                    pw.println("<body>");
                    pw.println("<div align=\"center\">");
                    pw.println("<h1>Reporte de Errores</h1>");
                    pw.println("<br></br>");
                    pw.println("<table border=1>");
                    pw.println("<tr>");
                    pw.println("<td bgcolor=green>TIPO</td>");
                    pw.println("<td bgcolor=green>VALOR</td>");
                    pw.println("<td bgcolor=green>FILA</td>");
                    pw.println("<td bgcolor=green>COLUMNA</td>");
                    pw.println("</tr>");
                    for(int i=0;i<listaErrores.size();i++){
                        pw.println("<tr>");
                        pw.println("<td>"+listaErrores.get(i).getTipoError()+"</td>");
                        pw.println("<td>"+listaErrores.get(i).getValorError()+"</td>");
                        pw.println("<td>"+listaErrores.get(i).getFila()+"</td>");
                        pw.println("<td>"+listaErrores.get(i).getColumna()+"</td>");
                        pw.println("</tr>");
                    }
                    pw.println("</table>");
                    pw.println("</div");
                    pw.println("</body>");
                    pw.println("</html>");
                } catch (Exception e) {
                }finally{
                    if(null!=fichero){
                        try {
                            fichero.close();
                        } catch (IOException ex) {
                            Logger.getLogger(Grafica.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                try {
                    String comn = "opera "+"//home//dark//A_Entradas_Proyecto2//Compi_Proyecto1//Reporte_ErroresL.html";
                    Runtime html = Runtime.getRuntime();
                    html.exec(comn);
            
            //System.out.println("Final");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void ReporteErroresSintactico(){
        FileWriter fichero = null;
                PrintWriter pw = null;
                try {
                    fichero = new FileWriter("//home//dark//A_Entradas_Proyecto2//Compi_Proyecto1//Reporte_ErroresS.html");
                    pw = new PrintWriter(fichero);
                    //comenzamos a escribir el html
                    pw.println("<html>");
                    pw.println("<head><title>REPORTE DE ERRORES SINTACTICOS</title></head>");
                    pw.println("<body>");
                    pw.println("<div align=\"center\">");
                    pw.println("<h1>Reporte de Errores</h1>");
                    pw.println("<br></br>");
                    pw.println("<table border=1>");
                    pw.println("<tr>");
                    pw.println("<td bgcolor=green>TIPO</td>");
                    pw.println("<td bgcolor=green>VALOR</td>");
                    pw.println("<td bgcolor=green>FILA</td>");
                    pw.println("<td bgcolor=green>COLUMNA</td>");
                    pw.println("</tr>");
                    for(int i=0;i<listaErroresSintacticos.size();i++){
                        pw.println("<tr>");
                        pw.println("<td>"+listaErroresSintacticos.get(i).getTipoError()+"</td>");
                        pw.println("<td>"+listaErroresSintacticos.get(i).getValorError()+"</td>");
                        pw.println("<td>"+listaErroresSintacticos.get(i).getFila()+"</td>");
                        pw.println("<td>"+listaErroresSintacticos.get(i).getColumna()+"</td>");
                        pw.println("</tr>");
                    }
                    pw.println("</table>");
                    pw.println("</div");
                    pw.println("</body>");
                    pw.println("</html>");
                } catch (Exception e) {
                }finally{
                    if(null!=fichero){
                        try {
                            fichero.close();
                        } catch (IOException ex) {
                            Logger.getLogger(Grafica.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
                try {
                    String comn = "opera "+"//home//dark//A_Entradas_Proyecto2//Compi_Proyecto1//Reporte_ErroresS.html";
                    Runtime html = Runtime.getRuntime();
                    html.exec(comn);
                    
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    
    
    private void btnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirArchivoActionPerformed
        // TODO add your handling code here:
        txtEntrdada.setText("");
        listaErrores.clear();
        nombre_carpeta = "";
        try
            {
                /**llamamos el metodo que permite cargar la ventana*/
                JFileChooser file=new JFileChooser();
                file.showOpenDialog(this);
                /**abrimos el archivo seleccionado*/
                String abre=file.getSelectedFile().toString();
                String temp = file.getSelectedFile().getName();
                nombre_carpeta = temp.substring(0,temp.length()-4);
                crearCarpetas();
                FileReader fr = null;
                BufferedReader br = null;
                
                try {
                // Apertura del fichero y creacion de BufferedReader para poder
                // hacer una lectura comoda (disponer del metodo readLine()).
         
                fr = new FileReader (abre);
                br = new BufferedReader(fr);

                 // Lectura del fichero
                String temp_valor ="";
                String linea;
                while((linea=br.readLine())!=null)
                {
                    temp_valor +=linea+"\n";
                }
                
                txtEntrdada.setText(temp_valor);
      }
      catch(Exception e){
         e.printStackTrace();
      }
                

                /**recorremos el archivo, lo leemos para plasmarlo
                *en el area de texto*/
                if(!abre.equals(""))
                {    
                    System.out.println("Entro perro");
                    ///read_file.read_file_people(abre);
                    
                }    
            }
            catch(Exception ex)
            {
                 JOptionPane.showMessageDialog(null,ex+"" +
                "\nFile not found",
                 " WARNING!!!",JOptionPane.WARNING_MESSAGE);
            }
    }//GEN-LAST:event_btnAbrirArchivoActionPerformed

    public void crearCarpetas()
    {
        
        String path = "//home//dark//A_Entradas_Proyecto2//Compi_Proyecto1//";
       File directorio = new File(path+nombre_carpeta);
       
        if (!directorio.exists()) {
            if (directorio.mkdirs()) {
                System.out.println("Directorio creado");
                
            } else {
                System.out.println("Error al crear directorio");
            }
        }
        
        LinkedList<String> listaCarpeta = new LinkedList<>();
        listaCarpeta.add("AFD");
        listaCarpeta.add("AFND");
        listaCarpeta.add("Arboles");
        listaCarpeta.add("Salidas");
        listaCarpeta.add("Siguientes");
        listaCarpeta.add("Transiciones");
        
        for (int i = 0; i <listaCarpeta.size(); i++) {
            File dir = new File(path+nombre_carpeta+"//"+listaCarpeta.get(i));
       
        if (!dir.exists()) {
            if (dir.mkdirs()) {
                System.out.println("Directorio creado");
                
            } else {
                System.out.println("Error al crear directorio");
            }
        }
            
        }
    
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Grafica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Grafica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnAbrirArchivo;
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea txtEntrdada;
    // End of variables declaration//GEN-END:variables
}
